{"ast":null,"code":"var _jsxFileName = \"/home/guddy/code/project/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../styles/api';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          logout();\n        } else {\n          setUser(decoded);\n        }\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const res = await api.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      return {\n        success: false,\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const res = await api.post('/auth/register', {\n        username,\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const requestPasswordReset = async email => {\n    try {\n      const res = await api.post('/auth/forgot-password', {\n        email\n      });\n      return {\n        success: true,\n        message: res.data.message\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      return {\n        success: false,\n        error: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Request failed'\n      };\n    }\n  };\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, {\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      return {\n        success: false,\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Password reset failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout,\n    requestPasswordReset,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jwtDecode","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","decoded","exp","Date","now","logout","error","login","email","password","res","post","setItem","data","success","err","_err$response","_err$response$data","response","register","username","_err$response2","_err$response2$data","removeItem","requestPasswordReset","message","_err$response3","_err$response3$data","resetPassword","_err$response4","_err$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/guddy/code/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../styles/api';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          logout();\n        } else {\n          setUser(decoded);\n        }\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const res = await api.post('/auth/login', { email, password });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return { success: true };\n    } catch (err) {\n      return { success: false, error: err.response?.data?.error || 'Login failed' };\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const res = await api.post('/auth/register', { username, email, password });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return { success: true };\n    } catch (err) {\n      return { success: false, error: err.response?.data?.error || 'Registration failed' };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const requestPasswordReset = async (email) => {\n    try {\n      const res = await api.post('/auth/forgot-password', { email });\n      return { success: true, message: res.data.message };\n    } catch (err) {\n      return { success: false, error: err.response?.data?.error || 'Request failed' };\n    }\n  };\n\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, { password });\n      return { success: true };\n    } catch (err) {\n      return { success: false, error: err.response?.data?.error || 'Password reset failed' };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout,\n    requestPasswordReset,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}