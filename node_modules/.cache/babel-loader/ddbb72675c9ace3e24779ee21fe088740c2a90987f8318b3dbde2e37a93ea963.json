{"ast":null,"code":"var _jsxFileName = \"/persistent/home/guddy/code/emailclassifier/email-classifier-frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../styles/api\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          logout();\n        } else {\n          setUser(decoded);\n        }\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Login failed\");\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Login failed\"\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const res = await api.post(\"/auth/register\", {\n        username,\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || \"Registration failed\");\n      return {\n        success: false,\n        error: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n  const requestPasswordReset = async email => {\n    try {\n      const res = await api.post(\"/auth/forgot-password\", {\n        email\n      });\n      return {\n        success: true,\n        message: res.data.message\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data, _err$response6, _err$response6$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || \"Request failed\");\n      return {\n        success: false,\n        error: ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.error) || \"Request failed\"\n      };\n    }\n  };\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, {\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response7, _err$response7$data, _err$response8, _err$response8$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.error) || \"Password reset failed\");\n      return {\n        success: false,\n        error: ((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.error) || \"Password reset failed\"\n      };\n    }\n  };\n  const clearErrors = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout,\n    requestPasswordReset,\n    resetPassword,\n    error,\n    clearErrors\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"hqCNUyugmrc2HYZti9GUIvykIJ0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jwtDecode","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","decoded","exp","Date","now","logout","login","email","password","res","post","setItem","data","success","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","register","username","_err$response3","_err$response3$data","_err$response4","_err$response4$data","removeItem","requestPasswordReset","message","_err$response5","_err$response5$data","_err$response6","_err$response6$data","resetPassword","_err$response7","_err$response7$data","_err$response8","_err$response8$data","clearErrors","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/persistent/home/guddy/code/emailclassifier/email-classifier-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../styles/api\";\nimport jwtDecode from \"jwt-decode\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          logout();\n        } else {\n          setUser(decoded);\n        }\n      } catch (error) {\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const res = await api.post(\"/auth/login\", { email, password });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.error || \"Login failed\");\n      return {\n        success: false,\n        error: err.response?.data?.error || \"Login failed\",\n      };\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const res = await api.post(\"/auth/register\", {\n        username,\n        email,\n        password,\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n      const decoded = jwtDecode(res.data.token);\n      setUser(decoded);\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.error || \"Registration failed\");\n      return {\n        success: false,\n        error: err.response?.data?.error || \"Registration failed\",\n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n\n  const requestPasswordReset = async (email) => {\n    try {\n      const res = await api.post(\"/auth/forgot-password\", { email });\n      return { success: true, message: res.data.message };\n    } catch (err) {\n      setError(err.response?.data?.error || \"Request failed\");\n      return {\n        success: false,\n        error: err.response?.data?.error || \"Request failed\",\n      };\n    }\n  };\n\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, { password });\n      return { success: true };\n    } catch (err) {\n      setError(err.response?.data?.error || \"Password reset failed\");\n      return {\n        success: false,\n        error: err.response?.data?.error || \"Password reset failed\",\n      };\n    }\n  };\n\n  const clearErrors = () => {\n    setError(null);\n  };\n\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout,\n    requestPasswordReset,\n    resetPassword,\n    error,\n    clearErrors,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}