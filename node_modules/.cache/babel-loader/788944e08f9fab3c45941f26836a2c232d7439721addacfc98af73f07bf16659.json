{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useForm } from 'react-hook-form';\n// import styled from 'styled-components';\n// import { Mail, Send, AlertCircle, CheckCircle } from 'lucide-react';\n\n// import { useAuth } from '../contexts/AuthContext';\n// import LoadingSpinner from '../components/common/LoadingSpinner';\n\n// const ForgotPasswordContainer = styled.div`\n//   min-height: 100vh;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background: linear-gradient(135deg,\n//     ${({ theme }) => theme.colors.primary}10 0%,\n//     ${({ theme }) => theme.colors.secondary}10 100%\n//   );\n//   padding: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const ForgotPasswordCard = styled.div`\n//   background: ${({ theme }) => theme.colors.surface};\n//   border-radius: ${({ theme }) => theme.borderRadius.xl};\n//   box-shadow: ${({ theme }) => theme.boxShadow.xl};\n//   padding: ${({ theme }) => theme.spacing[8]};\n//   width: 100%;\n//   max-width: 400px;\n//   border: 1px solid ${({ theme }) => theme.colors.border};\n// `;\n\n// const TitleSection = styled.div`\n//   text-align: center;\n//   margin-bottom: ${({ theme }) => theme.spacing[8]};\n// `;\n\n// const Title = styled.h1`\n//   font-size: ${({ theme }) => theme.typography.fontSize['2xl']};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\n//   color: ${({ theme }) => theme.colors.primary};\n//   margin-bottom: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Subtitle = styled.p`\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const FormGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Label = styled.label`\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   color: ${({ theme }) => theme.colors.textPrimary};\n// `;\n\n// const InputWrapper = styled.div`\n//   position: relative;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   padding-left: ${({ theme }) => theme.spacing[10]};\n//   border: 1px solid ${({ theme, error }) => error ? theme.colors.error : theme.colors.border};\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   background: ${({ theme }) => theme.colors.background};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   transition: all ${({ theme }) => theme.transitions.fast};\n\n//   &:focus {\n//     outline: none;\n//     border-color: ${({ theme, error }) => error ? theme.colors.error : theme.colors.primary};\n//     box-shadow: 0 0 0 3px ${({ theme, error }) =>\n//       error ? theme.colors.error : theme.colors.primary}20;\n//   }\n\n//   &::placeholder {\n//     color: ${({ theme }) => theme.colors.textTertiary};\n//   }\n// `;\n\n// const InputIcon = styled.div`\n//   position: absolute;\n//   left: ${({ theme }) => theme.spacing[3]};\n//   color: ${({ theme, error }) => error ? theme.colors.error : theme.colors.textTertiary};\n//   display: flex;\n//   align-items: center;\n//   z-index: 1;\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ErrorMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[1]};\n//   color: ${({ theme }) => theme.colors.error};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   margin-top: ${({ theme }) => theme.spacing[1]};\n\n//   svg {\n//     width: 14px;\n//     height: 14px;\n//   }\n// `;\n\n// const SuccessMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   color: ${({ theme }) => theme.colors.success};\n//   background-color: ${({ theme }) => theme.colors.success}10;\n//   border: 1px solid ${({ theme }) => theme.colors.success}30;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   padding: ${({ theme }) => theme.spacing[3]};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const SubmitButton = styled.button`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   background: ${({ theme }) => theme.colors.primary};\n//   color: ${({ theme }) => theme.colors.white};\n//   border: none;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   cursor: pointer;\n//   transition: all ${({ theme }) => theme.transitions.fast};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   min-height: 48px;\n\n//   &:hover:not(:disabled) {\n//     background: ${({ theme }) => theme.colors.primaryHover};\n//     transform: translateY(-1px);\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: translateY(0);\n//   }\n\n//   &:disabled {\n//     background: ${({ theme }) => theme.colors.gray400};\n//     cursor: not-allowed;\n//     transform: none;\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const BackToLoginLink = styled(Link)`\n//   display: block;\n//   text-align: center;\n//   margin-top: ${({ theme }) => theme.spacing[4]};\n//   color: ${({ theme }) => theme.colors.primary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   text-decoration: none;\n\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const ForgotPassword = () => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [message, setMessage] = useState(null);\n//   const { requestPasswordReset, error, clearErrors } = useAuth();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors, isValid },\n//   } = useForm({\n//     mode: 'onChange',\n//     defaultValues: {\n//       email: '',\n//     },\n//   });\n\n//   const onSubmit = async (data) => {\n//     setIsLoading(true);\n//     clearErrors();\n//     setMessage(null);\n\n//     try {\n//       const result = await requestPasswordReset(data.email);\n//       if (result.success) {\n//         setMessage('If an account with that email exists, a password reset link has been sent.');\n//       }\n//     } catch (err) {\n//       // Error is handled by the AuthContext\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <ForgotPasswordContainer>\n//       <ForgotPasswordCard>\n//         <TitleSection>\n//           <Title>Forgot Password</Title>\n//           <Subtitle>Enter your email to receive a reset link</Subtitle>\n//         </TitleSection>\n\n//         {message && (\n//           <SuccessMessage>\n//             <CheckCircle />\n//             {message}\n//           </SuccessMessage>\n//         )}\n\n//         <Form onSubmit={handleSubmit(onSubmit)} noValidate>\n//           <FormGroup>\n//             <Label htmlFor=\"email\">Email Address</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.email}>\n//                 <Mail />\n//               </InputIcon>\n//               <Input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 error={errors.email}\n//                 {...register('email', {\n//                   required: 'Email is required',\n//                   pattern: {\n//                     value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                     message: 'Please enter a valid email address',\n//                   },\n//                 })}\n//               />\n//             </InputWrapper>\n//             {errors.email && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.email.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           {error && (\n//             <ErrorMessage>\n//               <AlertCircle />\n//               Failed to edit, 0 occurrences found for old_string (import React from 'react';\n\n// const Analytics = () => {\n//   return (\n//     <div>\n//       <h1>Analytics Page</h1>\n//       <p>This is where you would see charts and data about your emails.</p>\n//     </div>\n//   );\n// };\n\n// export default Analytics;\n// ). Original old_string was (import React from 'react';\n\n// const Analytics = () => {\n//   return (\n//     <div>\n//       <h1>Analytics Page</h1>\n//       <p>This is where you would see charts and data about your emails.</p>\n//     </div>\n//   );\n// };\n\n// export default Analytics;\n// ) in /home/guddy/code/project/client/src/pages/Analytics.js. No edits made. The exact text in old_string was not found. Ensure you're not escaping content incorrectly and check whitespace, indentation, and context. Use read_file tool to verify.\n//             </ErrorMessage>\n//           )}\n\n//           <SubmitButton type=\"submit\" disabled={!isValid || isLoading}>\n//             {isLoading ? (\n//               <LoadingSpinner size=\"sm\" color=\"white\" />\n//             ) : (\n//               <>\n//                 <Send />\n//                 Send Reset Link\n//               </>\n//             )}\n//           </SubmitButton>\n//         </Form>\n\n//         <BackToLoginLink to=\"/login\">Back to Sign In</BackToLoginLink>\n//       </ForgotPasswordCard>\n//     </ForgotPasswordContainer>\n//   );\n// };\n\n// export default ForgotPassword;","map":{"version":3,"names":[],"sources":["/home/guddy/code/project/client/src/pages/Analytics.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { useForm } from 'react-hook-form';\n// import styled from 'styled-components';\n// import { Mail, Send, AlertCircle, CheckCircle } from 'lucide-react';\n\n// import { useAuth } from '../contexts/AuthContext';\n// import LoadingSpinner from '../components/common/LoadingSpinner';\n\n// const ForgotPasswordContainer = styled.div`\n//   min-height: 100vh;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background: linear-gradient(135deg,\n//     ${({ theme }) => theme.colors.primary}10 0%,\n//     ${({ theme }) => theme.colors.secondary}10 100%\n//   );\n//   padding: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const ForgotPasswordCard = styled.div`\n//   background: ${({ theme }) => theme.colors.surface};\n//   border-radius: ${({ theme }) => theme.borderRadius.xl};\n//   box-shadow: ${({ theme }) => theme.boxShadow.xl};\n//   padding: ${({ theme }) => theme.spacing[8]};\n//   width: 100%;\n//   max-width: 400px;\n//   border: 1px solid ${({ theme }) => theme.colors.border};\n// `;\n\n// const TitleSection = styled.div`\n//   text-align: center;\n//   margin-bottom: ${({ theme }) => theme.spacing[8]};\n// `;\n\n// const Title = styled.h1`\n//   font-size: ${({ theme }) => theme.typography.fontSize['2xl']};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\n//   color: ${({ theme }) => theme.colors.primary};\n//   margin-bottom: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Subtitle = styled.p`\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const FormGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Label = styled.label`\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   color: ${({ theme }) => theme.colors.textPrimary};\n// `;\n\n// const InputWrapper = styled.div`\n//   position: relative;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   padding-left: ${({ theme }) => theme.spacing[10]};\n//   border: 1px solid ${({ theme, error }) => error ? theme.colors.error : theme.colors.border};\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   background: ${({ theme }) => theme.colors.background};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   transition: all ${({ theme }) => theme.transitions.fast};\n\n//   &:focus {\n//     outline: none;\n//     border-color: ${({ theme, error }) => error ? theme.colors.error : theme.colors.primary};\n//     box-shadow: 0 0 0 3px ${({ theme, error }) =>\n//       error ? theme.colors.error : theme.colors.primary}20;\n//   }\n\n//   &::placeholder {\n//     color: ${({ theme }) => theme.colors.textTertiary};\n//   }\n// `;\n\n// const InputIcon = styled.div`\n//   position: absolute;\n//   left: ${({ theme }) => theme.spacing[3]};\n//   color: ${({ theme, error }) => error ? theme.colors.error : theme.colors.textTertiary};\n//   display: flex;\n//   align-items: center;\n//   z-index: 1;\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ErrorMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[1]};\n//   color: ${({ theme }) => theme.colors.error};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   margin-top: ${({ theme }) => theme.spacing[1]};\n\n//   svg {\n//     width: 14px;\n//     height: 14px;\n//   }\n// `;\n\n// const SuccessMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   color: ${({ theme }) => theme.colors.success};\n//   background-color: ${({ theme }) => theme.colors.success}10;\n//   border: 1px solid ${({ theme }) => theme.colors.success}30;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   padding: ${({ theme }) => theme.spacing[3]};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const SubmitButton = styled.button`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   background: ${({ theme }) => theme.colors.primary};\n//   color: ${({ theme }) => theme.colors.white};\n//   border: none;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   cursor: pointer;\n//   transition: all ${({ theme }) => theme.transitions.fast};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   min-height: 48px;\n\n//   &:hover:not(:disabled) {\n//     background: ${({ theme }) => theme.colors.primaryHover};\n//     transform: translateY(-1px);\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: translateY(0);\n//   }\n\n//   &:disabled {\n//     background: ${({ theme }) => theme.colors.gray400};\n//     cursor: not-allowed;\n//     transform: none;\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const BackToLoginLink = styled(Link)`\n//   display: block;\n//   text-align: center;\n//   margin-top: ${({ theme }) => theme.spacing[4]};\n//   color: ${({ theme }) => theme.colors.primary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   text-decoration: none;\n\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const ForgotPassword = () => {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [message, setMessage] = useState(null);\n//   const { requestPasswordReset, error, clearErrors } = useAuth();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors, isValid },\n//   } = useForm({\n//     mode: 'onChange',\n//     defaultValues: {\n//       email: '',\n//     },\n//   });\n\n//   const onSubmit = async (data) => {\n//     setIsLoading(true);\n//     clearErrors();\n//     setMessage(null);\n\n//     try {\n//       const result = await requestPasswordReset(data.email);\n//       if (result.success) {\n//         setMessage('If an account with that email exists, a password reset link has been sent.');\n//       }\n//     } catch (err) {\n//       // Error is handled by the AuthContext\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <ForgotPasswordContainer>\n//       <ForgotPasswordCard>\n//         <TitleSection>\n//           <Title>Forgot Password</Title>\n//           <Subtitle>Enter your email to receive a reset link</Subtitle>\n//         </TitleSection>\n\n//         {message && (\n//           <SuccessMessage>\n//             <CheckCircle />\n//             {message}\n//           </SuccessMessage>\n//         )}\n\n//         <Form onSubmit={handleSubmit(onSubmit)} noValidate>\n//           <FormGroup>\n//             <Label htmlFor=\"email\">Email Address</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.email}>\n//                 <Mail />\n//               </InputIcon>\n//               <Input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 error={errors.email}\n//                 {...register('email', {\n//                   required: 'Email is required',\n//                   pattern: {\n//                     value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                     message: 'Please enter a valid email address',\n//                   },\n//                 })}\n//               />\n//             </InputWrapper>\n//             {errors.email && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.email.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           {error && (\n//             <ErrorMessage>\n//               <AlertCircle />\n//               Failed to edit, 0 occurrences found for old_string (import React from 'react';\n\n// const Analytics = () => {\n//   return (\n//     <div>\n//       <h1>Analytics Page</h1>\n//       <p>This is where you would see charts and data about your emails.</p>\n//     </div>\n//   );\n// };\n\n// export default Analytics;\n// ). Original old_string was (import React from 'react';\n\n// const Analytics = () => {\n//   return (\n//     <div>\n//       <h1>Analytics Page</h1>\n//       <p>This is where you would see charts and data about your emails.</p>\n//     </div>\n//   );\n// };\n\n// export default Analytics;\n// ) in /home/guddy/code/project/client/src/pages/Analytics.js. No edits made. The exact text in old_string was not found. Ensure you're not escaping content incorrectly and check whitespace, indentation, and context. Use read_file tool to verify.\n//             </ErrorMessage>\n//           )}\n\n//           <SubmitButton type=\"submit\" disabled={!isValid || isLoading}>\n//             {isLoading ? (\n//               <LoadingSpinner size=\"sm\" color=\"white\" />\n//             ) : (\n//               <>\n//                 <Send />\n//                 Send Reset Link\n//               </>\n//             )}\n//           </SubmitButton>\n//         </Form>\n\n//         <BackToLoginLink to=\"/login\">Back to Sign In</BackToLoginLink>\n//       </ForgotPasswordCard>\n//     </ForgotPasswordContainer>\n//   );\n// };\n\n// export default ForgotPassword;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}