{"ast":null,"code":"var _jsxFileName = \"/home/guddy/code/project/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport jwtDecode from 'jwt-decode';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  CLEAR_ERRORS: 'CLEAR_ERRORS',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  SET_LOADING: 'SET_LOADING'\n};\n\n// Reducer function\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        },\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Axios instance with interceptors\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if token is expired\n  const isTokenExpired = token => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 < Date.now();\n    } catch {\n      return true;\n    }\n  };\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (!token || isTokenExpired(token)) {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'No valid token'\n        });\n        return;\n      }\n      try {\n        const response = await api.get('/auth/me');\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n          payload: response.data.user\n        });\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to load user'\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      const response = await api.post('/auth/register', userData);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    toast.success('Logged out successfully!');\n  };\n\n  // Update profile function\n  const updateProfile = async profileData => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Profile update failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      await api.put('/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Password change failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Request password reset\n  const requestPasswordReset = async email => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      await api.post('/auth/forgot-password', {\n        email\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      toast.success('Password reset email sent!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const errorMessage = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to send reset email';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear errors\n  const clearErrors = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERRORS\n    });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    requestPasswordReset,\n    clearErrors\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// HOC for components that require authentication\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const withAuth = WrappedComponent => {\n  var _s3 = $RefreshSig$();\n  return _s3(function AuthenticatedComponent(props) {\n    _s3();\n    const {\n      isAuthenticated,\n      loading\n    } = useAuth();\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 14\n      }, this);\n    }\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 12\n    }, this);\n  }, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n    return [useAuth];\n  });\n};\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jwtDecode","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CLEAR_ERRORS","UPDATE_PROFILE_SUCCESS","SET_LOADING","authReducer","state","action","type","setItem","payload","removeItem","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","Promise","reject","response","_error$response","status","window","location","href","AuthProvider","children","_s","dispatch","isTokenExpired","decoded","exp","Date","now","loadUser","get","data","_error$response2","_error$response2$data","message","login","email","password","post","success","_error$response3","_error$response3$data","errorMessage","register","userData","_error$response4","_error$response4$data","logout","updateProfile","profileData","put","_error$response5","_error$response5$data","changePassword","currentPassword","newPassword","_error$response6","_error$response6$data","requestPasswordReset","_error$response7","_error$response7$data","clearErrors","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","withAuth","WrappedComponent","_s3","$RefreshSig$","AuthenticatedComponent","props","$RefreshReg$"],"sources":["/home/guddy/code/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport jwtDecode from 'jwt-decode';\n\n// Create context\nconst AuthContext = createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  CLEAR_ERRORS: 'CLEAR_ERRORS',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  SET_LOADING: 'SET_LOADING',\n};\n\n// Reducer function\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Axios instance with interceptors\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n});\n\n// Request interceptor to add token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if token is expired\n  const isTokenExpired = (token) => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      return decoded.exp * 1000 < Date.now();\n    } catch {\n      return true;\n    }\n  };\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n\n      if (!token || isTokenExpired(token)) {\n        dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'No valid token' });\n        return;\n      }\n\n      try {\n        const response = await api.get('/auth/me');\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n          payload: response.data.user,\n        });\n      } catch (error) {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: error.response?.data?.message || 'Failed to load user',\n        });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n\n    try {\n      const response = await api.post('/auth/login', { email, password });\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token,\n        },\n      });\n\n      toast.success('Logged in successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n\n    try {\n      const response = await api.post('/auth/register', userData);\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user: response.data.user,\n          token: response.data.token,\n        },\n      });\n\n      toast.success('Account created successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage,\n      });\n\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    toast.success('Logged out successfully!');\n  };\n\n  // Update profile function\n  const updateProfile = async (profileData) => {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n\n    try {\n      const response = await api.put('/auth/profile', profileData);\n\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n        payload: response.data.user,\n      });\n\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Profile update failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n\n    try {\n      await api.put('/auth/change-password', {\n        currentPassword,\n        newPassword,\n      });\n\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Password change failed';\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Request password reset\n  const requestPasswordReset = async (email) => {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\n\n    try {\n      await api.post('/auth/forgot-password', { email });\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\n      toast.success('Password reset email sent!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Failed to send reset email';\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear errors\n  const clearErrors = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERRORS });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    requestPasswordReset,\n    clearErrors,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n};\n\n// HOC for components that require authentication\nexport const withAuth = (WrappedComponent) => {\n  return function AuthenticatedComponent(props) {\n    const { isAuthenticated, loading } = useAuth();\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n      return null;\n    }\n\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}