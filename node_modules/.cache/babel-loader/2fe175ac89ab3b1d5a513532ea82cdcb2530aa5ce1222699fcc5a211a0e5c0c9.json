{"ast":null,"code":"var _jsxFileName = \"/home/guddy/code/project/client/src/pages/Home.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: ${({\n  theme\n}) => theme.colors.background};\n`;\n_c = HomeContainer;\nconst ConnectAccountPrompt = styled.div`\n  text-align: center;\n  padding: 40px;\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.lg};\n  h3 {\n    margin-bottom: 16px;\n  }\n  p {\n    margin-bottom: 24px;\n    color: ${({\n  theme\n}) => theme.colors.textSecondary};\n  }\n`;\n_c2 = ConnectAccountPrompt;\nconst ConnectButton = styled.button`\n  padding: 10px 20px;\n  background: ${({\n  theme\n}) => theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  &:hover {\n    background: ${({\n  theme\n}) => theme.colors.primaryHover};\n  }\n`;\n_c3 = ConnectButton;\nconst Home = () => {\n  const handleConnectGmail = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(\"/api/auth/google\", config);\n      window.location.href = response.data.url;\n    } catch (error) {\n      console.error(\"Error connecting to Gmail:\", error);\n      toast.error(\"Could not connect to Google. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(HomeContainer, {\n    children: /*#__PURE__*/_jsxDEV(ConnectAccountPrompt, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connect your email account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To start classifying emails, you need to connect your Gmail account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n        onClick: handleConnectGmail,\n        children: \"Connect Gmail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HomeContainer\");\n$RefreshReg$(_c2, \"ConnectAccountPrompt\");\n$RefreshReg$(_c3, \"ConnectButton\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"names":["React","styled","axios","toast","jsxDEV","_jsxDEV","HomeContainer","div","theme","colors","background","_c","ConnectAccountPrompt","surface","borderRadius","lg","textSecondary","_c2","ConnectButton","button","primary","primaryHover","_c3","Home","handleConnectGmail","token","localStorage","getItem","config","headers","Authorization","response","get","window","location","href","data","url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/home/guddy/code/project/client/src/pages/Home.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nconst HomeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: ${({ theme }) => theme.colors.background};\n`;\n\nconst ConnectAccountPrompt = styled.div`\n  text-align: center;\n  padding: 40px;\n  background: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.lg};\n  h3 {\n    margin-bottom: 16px;\n  }\n  p {\n    margin-bottom: 24px;\n    color: ${({ theme }) => theme.colors.textSecondary};\n  }\n`;\n\nconst ConnectButton = styled.button`\n  padding: 10px 20px;\n  background: ${({ theme }) => theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  &:hover {\n    background: ${({ theme }) => theme.colors.primaryHover};\n  }\n`;\n\nconst Home = () => {\n  const handleConnectGmail = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const config = { headers: { Authorization: `Bearer ${token}` } };\n      const response = await axios.get(\"/api/auth/google\", config);\n      window.location.href = response.data.url;\n    } catch (error) {\n      console.error(\"Error connecting to Gmail:\", error);\n      toast.error(\"Could not connect to Google. Please try again.\");\n    }\n  };\n\n  return (\n    <HomeContainer>\n      <ConnectAccountPrompt>\n        <h3>Connect your email account</h3>\n        <p>\n          To start classifying emails, you need to connect your Gmail\n          account.\n        </p>\n        <ConnectButton onClick={handleConnectGmail}>\n          Connect Gmail\n        </ConnectButton>\n      </ConnectAccountPrompt>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}