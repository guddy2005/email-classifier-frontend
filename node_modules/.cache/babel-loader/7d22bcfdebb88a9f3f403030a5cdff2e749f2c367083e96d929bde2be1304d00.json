{"ast":null,"code":"var _jsxFileName = \"/persistent/home/guddy/code/emailclassifier/email-classifier-frontend/src/pages/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport allEmails from \"../data.json\"; // Import local data\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\nimport { BarChart2 } from \"lucide-react\";\n\n// --- Chart.js Imports ---\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title as ChartTitle } from \"chart.js\";\n\n// --- Register Chart.js components ---\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, ChartTitle);\nconst AnalyticsContainer = styled.div`\n  padding: ${({\n  theme\n}) => theme.spacing[4]};\n`;\n_c = AnalyticsContainer;\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: ${({\n  theme\n}) => theme.spacing[3]};\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize[\"3xl\"]};\n  margin-bottom: ${({\n  theme\n}) => theme.spacing[6]};\n`;\n_c2 = Title;\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${({\n  theme\n}) => theme.spacing[6]};\n`;\n_c3 = StatsGrid;\nconst StatCard = styled.div`\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.border};\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.lg};\n  padding: ${({\n  theme\n}) => theme.spacing[6]};\n  text-align: center;\n`;\n_c4 = StatCard;\nconst StatValue = styled.p`\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize[\"4xl\"]};\n  font-weight: ${({\n  theme\n}) => theme.typography.fontWeight.bold};\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  margin: 0;\n`;\n_c5 = StatValue;\nconst StatLabel = styled.p`\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize.base};\n  color: ${({\n  theme\n}) => theme.colors.textSecondary};\n  margin-top: ${({\n  theme\n}) => theme.spacing[2]};\n`;\n_c6 = StatLabel;\nconst ChartsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${({\n  theme\n}) => theme.spacing[6]};\n  margin-top: ${({\n  theme\n}) => theme.spacing[6]};\n`;\n_c7 = ChartsGrid;\nconst ChartContainer = styled.div`\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.border};\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.lg};\n  padding: ${({\n  theme\n}) => theme.spacing[4]};\n`;\n_c8 = ChartContainer;\nconst Analytics = () => {\n  _s();\n  const [analyticsData, setAnalyticsData] = useState(null);\n  const theme = useTheme();\n  useEffect(() => {\n    // Process the data from the imported JSON file\n    const calculateAnalytics = () => {\n      if (!allEmails || allEmails.length === 0) {\n        setAnalyticsData({\n          totalEmails: 0,\n          categoryCounts: {}\n        });\n        return;\n      }\n      const totalEmails = allEmails.length;\n      const categoryCounts = allEmails.reduce((acc, email) => {\n        acc[email.category] = (acc[email.category] || 0) + 1;\n        return acc;\n      }, {});\n      setAnalyticsData({\n        totalEmails,\n        categoryCounts\n      });\n    };\n    calculateAnalytics();\n  }, []);\n  if (!analyticsData) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      text: \"Calculating analytics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- Chart Data and Options ---\n  const chartLabels = Object.keys(analyticsData.categoryCounts);\n  const chartValues = Object.values(analyticsData.categoryCounts);\n  const chartColors = [theme.colors.primary, theme.colors.secondary, theme.colors.success, theme.colors.warning, theme.colors.error, theme.colors.info];\n  const doughnutData = {\n    labels: chartLabels,\n    datasets: [{\n      label: \"Emails by Category\",\n      data: chartValues,\n      backgroundColor: chartColors,\n      borderColor: theme.colors.surface,\n      borderWidth: 2\n    }]\n  };\n  const barData = {\n    labels: chartLabels,\n    datasets: [{\n      label: 'Email Count',\n      data: chartValues,\n      backgroundColor: chartColors\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          color: theme.colors.textSecondary\n        }\n      },\n      title: {\n        display: true,\n        text: 'Email Category Distribution',\n        color: theme.colors.textPrimary,\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AnalyticsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [/*#__PURE__*/_jsxDEV(BarChart2, {\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 14\n      }, this), \" Analytics\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), analyticsData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StatsGrid, {\n        children: [/*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: analyticsData.totalEmails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Total Emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), Object.entries(analyticsData.categoryCounts).map(([category, count]) => /*#__PURE__*/_jsxDEV(StatCard, {\n          children: [/*#__PURE__*/_jsxDEV(StatValue, {\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChartsGrid, {\n        children: [/*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: doughnutData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: barData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"LMTYOscAXeJaAW83VJYV8ih/OYo=\", false, function () {\n  return [useTheme];\n});\n_c9 = Analytics;\nexport default Analytics;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AnalyticsContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"StatsGrid\");\n$RefreshReg$(_c4, \"StatCard\");\n$RefreshReg$(_c5, \"StatValue\");\n$RefreshReg$(_c6, \"StatLabel\");\n$RefreshReg$(_c7, \"ChartsGrid\");\n$RefreshReg$(_c8, \"ChartContainer\");\n$RefreshReg$(_c9, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","styled","useTheme","allEmails","LoadingSpinner","BarChart2","Doughnut","Bar","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","ChartTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","register","AnalyticsContainer","div","theme","spacing","_c","h1","typography","fontSize","_c2","StatsGrid","_c3","StatCard","colors","surface","border","borderRadius","lg","_c4","StatValue","p","fontWeight","bold","primary","_c5","StatLabel","base","textSecondary","_c6","ChartsGrid","_c7","ChartContainer","_c8","Analytics","_s","analyticsData","setAnalyticsData","calculateAnalytics","length","totalEmails","categoryCounts","reduce","acc","email","category","text","fileName","_jsxFileName","lineNumber","columnNumber","chartLabels","Object","keys","chartValues","values","chartColors","secondary","success","warning","error","info","doughnutData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","barData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","title","display","textPrimary","font","size","children","entries","map","count","options","_c9","$RefreshReg$"],"sources":["/persistent/home/guddy/code/emailclassifier/email-classifier-frontend/src/pages/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport allEmails from \"../data.json\"; // Import local data\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\nimport { BarChart2 } from \"lucide-react\";\n\n// --- Chart.js Imports ---\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title as ChartTitle,\n} from \"chart.js\";\n\n// --- Register Chart.js components ---\nChartJS.register(\n  ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, ChartTitle\n);\n\nconst AnalyticsContainer = styled.div`\n  padding: ${({ theme }) => theme.spacing[4]};\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing[3]};\n  font-size: ${({ theme }) => theme.typography.fontSize[\"3xl\"]};\n  margin-bottom: ${({ theme }) => theme.spacing[6]};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${({ theme }) => theme.spacing[6]};\n`;\n\nconst StatCard = styled.div`\n  background: ${({ theme }) => theme.colors.surface};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.lg};\n  padding: ${({ theme }) => theme.spacing[6]};\n  text-align: center;\n`;\n\nconst StatValue = styled.p`\n  font-size: ${({ theme }) => theme.typography.fontSize[\"4xl\"]};\n  font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\n  color: ${({ theme }) => theme.colors.primary};\n  margin: 0;\n`;\n\nconst StatLabel = styled.p`\n  font-size: ${({ theme }) => theme.typography.fontSize.base};\n  color: ${({ theme }) => theme.colors.textSecondary};\n  margin-top: ${({ theme }) => theme.spacing[2]};\n`;\n\nconst ChartsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: ${({ theme }) => theme.spacing[6]};\n  margin-top: ${({ theme }) => theme.spacing[6]};\n`;\n\nconst ChartContainer = styled.div`\n  background: ${({ theme }) => theme.colors.surface};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.lg};\n  padding: ${({ theme }) => theme.spacing[4]};\n`;\n\nconst Analytics = () => {\n  const [analyticsData, setAnalyticsData] = useState(null);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // Process the data from the imported JSON file\n    const calculateAnalytics = () => {\n      if (!allEmails || allEmails.length === 0) {\n        setAnalyticsData({ totalEmails: 0, categoryCounts: {} });\n        return;\n      }\n\n      const totalEmails = allEmails.length;\n      const categoryCounts = allEmails.reduce((acc, email) => {\n        acc[email.category] = (acc[email.category] || 0) + 1;\n        return acc;\n      }, {});\n\n      setAnalyticsData({ totalEmails, categoryCounts });\n    };\n\n    calculateAnalytics();\n  }, []);\n\n  if (!analyticsData) {\n    return <LoadingSpinner text=\"Calculating analytics...\" />;\n  }\n\n  // --- Chart Data and Options ---\n  const chartLabels = Object.keys(analyticsData.categoryCounts);\n  const chartValues = Object.values(analyticsData.categoryCounts);\n\n  const chartColors = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.success,\n    theme.colors.warning,\n    theme.colors.error,\n    theme.colors.info,\n  ];\n\n  const doughnutData = {\n    labels: chartLabels,\n    datasets: [\n      {\n        label: \"Emails by Category\",\n        data: chartValues,\n        backgroundColor: chartColors,\n        borderColor: theme.colors.surface,\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  const barData = {\n    labels: chartLabels,\n    datasets: [\n      {\n        label: 'Email Count',\n        data: chartValues,\n        backgroundColor: chartColors,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          color: theme.colors.textSecondary,\n        },\n      },\n      title: {\n        display: true,\n        text: 'Email Category Distribution',\n        color: theme.colors.textPrimary,\n        font: { size: 16 },\n      },\n    },\n  };\n\n  return (\n    <AnalyticsContainer>\n      <Title><BarChart2 size={32} /> Analytics</Title>\n      {analyticsData && (\n        <>\n          <StatsGrid>\n            <StatCard>\n              <StatValue>{analyticsData.totalEmails}</StatValue>\n              <StatLabel>Total Emails</StatLabel>\n            </StatCard>\n            {Object.entries(analyticsData.categoryCounts).map(\n              ([category, count]) => (\n                <StatCard key={category}>\n                  <StatValue>{count}</StatValue>\n                  <StatLabel>{category}</StatLabel>\n                </StatCard>\n              )\n            )}\n          </StatsGrid>\n\n          <ChartsGrid>\n            <ChartContainer>\n              <Doughnut data={doughnutData} options={chartOptions} />\n            </ChartContainer>\n            <ChartContainer>\n              <Bar data={barData} options={chartOptions} />\n            </ChartContainer>\n          </ChartsGrid>\n        </>\n      )}\n    </AnalyticsContainer>\n  );\n};\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}