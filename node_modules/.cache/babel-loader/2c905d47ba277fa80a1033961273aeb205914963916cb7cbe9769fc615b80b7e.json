{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import styled from \"styled-components\";\n// import { Eye, EyeOff, Mail, Lock, LogIn, AlertCircle } from \"lucide-react\";\n// import axios from \"axios\";\n// import { useAuth } from \"../contexts/AuthContext\";\n// import LoadingSpinner from \"../components/common/LoadingSpinner\";\n\n// const LoginContainer = styled.div`\n//   min-height: 100vh;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background: linear-gradient(\n//     135deg,\n//     ${({ theme }) => theme.colors.primary}10 0%,\n//     ${({ theme }) => theme.colors.secondary}10 100%\n//   );\n//   padding: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const LoginCard = styled.div`\n//   background: ${({ theme }) => theme.colors.surface};\n//   border-radius: ${({ theme }) => theme.borderRadius.xl};\n//   box-shadow: ${({ theme }) => theme.boxShadow.xl};\n//   padding: ${({ theme }) => theme.spacing[8]};\n//   width: 100%;\n//   max-width: 400px;\n//   border: 1px solid ${({ theme }) => theme.colors.border};\n// `;\n\n// const LogoSection = styled.div`\n//   text-align: center;\n//   margin-bottom: ${({ theme }) => theme.spacing[8]};\n// `;\n\n// const Logo = styled.h1`\n//   font-size: ${({ theme }) => theme.typography.fontSize[\"2xl\"]};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\n//   color: ${({ theme }) => theme.colors.primary};\n//   margin-bottom: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Subtitle = styled.p`\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const FormGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Label = styled.label`\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   color: ${({ theme }) => theme.colors.textPrimary};\n// `;\n\n// const InputWrapper = styled.div`\n//   position: relative;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   padding-left: ${({ theme }) => theme.spacing[10]};\n//   padding-right: ${({ hasButton, theme }) =>\n//     hasButton ? theme.spacing[10] : theme.spacing[4]};\n//   border: 1px solid\n//     ${({ theme, error }) => (error ? theme.colors.error : theme.colors.border)};\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   background: ${({ theme }) => theme.colors.background};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   transition: all ${({ theme }) => theme.transitions.fast};\n\n//   &:focus {\n//     outline: none;\n//     border-color: ${({ theme, error }) =>\n//       error ? theme.colors.error : theme.colors.primary};\n//     box-shadow: 0 0 0 3px\n//       ${({ theme, error }) =>\n//         error ? theme.colors.error : theme.colors.primary}20;\n//   }\n\n//   &::placeholder {\n//     color: ${({ theme }) => theme.colors.textTertiary};\n//   }\n// `;\n\n// const InputIcon = styled.div`\n//   position: absolute;\n//   left: ${({ theme }) => theme.spacing[3]};\n//   color: ${({ theme, error }) =>\n//     error ? theme.colors.error : theme.colors.textTertiary};\n//   display: flex;\n//   align-items: center;\n//   z-index: 1;\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const InputButton = styled.button`\n//   position: absolute;\n//   right: ${({ theme }) => theme.spacing[3]};\n//   background: none;\n//   border: none;\n//   color: ${({ theme }) => theme.colors.textTertiary};\n//   cursor: pointer;\n//   display: flex;\n//   align-items: center;\n//   transition: color ${({ theme }) => theme.transitions.fast};\n//   z-index: 1;\n\n//   &:hover {\n//     color: ${({ theme }) => theme.colors.textPrimary};\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ErrorMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[1]};\n//   color: ${({ theme }) => theme.colors.error};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   margin-top: ${({ theme }) => theme.spacing[1]};\n\n//   svg {\n//     width: 14px;\n//     height: 14px;\n//   }\n// `;\n\n// const SubmitButton = styled.button`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   background: ${({ theme }) => theme.colors.primary};\n//   color: ${({ theme }) => theme.colors.white};\n//   border: none;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   cursor: pointer;\n//   transition: all ${({ theme }) => theme.transitions.fast};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   min-height: 48px;\n\n//   &:hover:not(:disabled) {\n//     background: ${({ theme }) => theme.colors.primaryHover};\n//     transform: translateY(-1px);\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: translateY(0);\n//   }\n\n//   &:disabled {\n//     background: ${({ theme }) => theme.colors.gray400};\n//     cursor: not-allowed;\n//     transform: none;\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ForgotPassword = styled(Link)`\n//   text-align: center;\n//   color: ${({ theme }) => theme.colors.primary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   text-decoration: none;\n//   margin-top: ${({ theme }) => theme.spacing[2]};\n\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const Divider = styled.div`\n//   text-align: center;\n//   margin: ${({ theme }) => theme.spacing[6]} 0;\n//   color: ${({ theme }) => theme.colors.textTertiary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   position: relative;\n\n//   &::before {\n//     content: \"\";\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n//     right: 0;\n//     height: 1px;\n//     background: ${({ theme }) => theme.colors.border};\n//     z-index: 0;\n//   }\n\n//   span {\n//     background: ${({ theme }) => theme.colors.surface};\n//     padding: 0 ${({ theme }) => theme.spacing[4]};\n//     position: relative;\n//     z-index: 1;\n//   }\n// `;\n\n// const SignupLink = styled.div`\n//   text-align: center;\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n\n//   a {\n//     color: ${({ theme }) => theme.colors.primary};\n//     text-decoration: none;\n//     font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n\n//     &:hover {\n//       text-decoration: underline;\n//     }\n//   }\n// `;\n\n// const DemoCredentials = styled.div`\n//   background: ${({ theme }) => theme.colors.info}10;\n//   border: 1px solid ${({ theme }) => theme.colors.info}30;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   padding: ${({ theme }) => theme.spacing[4]};\n//   margin-bottom: ${({ theme }) => theme.spacing[4]};\n\n//   h4 {\n//     color: ${({ theme }) => theme.colors.info};\n//     font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//     font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//     margin-bottom: ${({ theme }) => theme.spacing[2]};\n//   }\n\n//   p {\n//     color: ${({ theme }) => theme.colors.textSecondary};\n//     font-size: ${({ theme }) => theme.typography.fontSize.xs};\n//     margin: ${({ theme }) => theme.spacing[1]} 0;\n//   }\n// `;\n\n// const Login = () => {\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [apiError, setApiError] = useState(null);\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { isAuthenticated, login, clearErrors } = useAuth();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors, isValid },\n//     setValue,\n//   } = useForm({\n//     mode: \"onChange\",\n//     defaultValues: {\n//       email: \"\",\n//       password: \"\",\n//     },\n//   });\n\n//   useEffect(() => {\n//     if (isAuthenticated) {\n//       const from = location.state?.from?.pathname || \"/dashboard\";\n//       navigate(from, { replace: true });\n//     }\n//   }, [isAuthenticated, navigate, location]);\n\n//   // Clear any old errors from the context when the component loads\n//   useEffect(() => {\n//     clearErrors();\n//   }, [clearErrors]);\n\n//   const onSubmit = async (data) => {\n//     setIsLoading(true);\n//     setApiError(null);\n//     try {\n//       // Call the backend API endpoint\n//       const res = await axios.post(\"/api/auth/login\", data);\n\n//       // On success, update the auth context with the new token\n//       login(res.data.token);\n\n//       const from = location.state?.from?.pathname || \"/dashboard\";\n//       navigate(from, { replace: true });\n//     } catch (err) {\n//       console.error(\"Login error:\", err);\n//       if (err.response && err.response.data && err.response.data.msg) {\n//         setApiError(err.response.data.msg); // E.g., \"Invalid credentials\"\n//       } else {\n//         setApiError(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   return (\n//     <LoginContainer>\n//       <LoginCard>\n//         <LogoSection>\n//           <Logo>Email Classifier</Logo>\n//           <Subtitle>AI-powered email management</Subtitle>\n//         </LogoSection>\n\n//         <Form onSubmit={handleSubmit(onSubmit)} noValidate>\n//           <FormGroup>\n//             <Label htmlFor=\"email\">Email Address</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.email}>\n//                 <Mail />\n//               </InputIcon>\n//               <Input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 error={errors.email}\n//                 {...register(\"email\", {\n//                   required: \"Email is required\",\n//                   pattern: {\n//                     value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                     message: \"Please enter a valid email address\",\n//                   },\n//                 })}\n//               />\n//             </InputWrapper>\n//             {errors.email && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.email.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           <FormGroup>\n//             <Label htmlFor=\"password\">Password</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.password}>\n//                 <Lock />\n//               </InputIcon>\n//               <Input\n//                 id=\"password\"\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 placeholder=\"Enter your password\"\n//                 error={errors.password}\n//                 hasButton\n//                 {...register(\"password\", {\n//                   required: \"Password is required\",\n//                 })}\n//               />\n//               <InputButton\n//                 type=\"button\"\n//                 onClick={togglePasswordVisibility}\n//                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n//               >\n//                 {showPassword ? <EyeOff /> : <Eye />}\n//               </InputButton>\n//             </InputWrapper>\n//             {errors.password && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.password.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           {apiError && (\n//             <ErrorMessage>\n//               <AlertCircle />\n//               {apiError}\n//             </ErrorMessage>\n//           )}\n\n//           <SubmitButton type=\"submit\" disabled={!isValid || isLoading}>\n//             {isLoading ? (\n//               <LoadingSpinner size=\"sm\" color=\"white\" />\n//             ) : (\n//               <>\n//                 <LogIn />\n//                 Sign In\n//               </>\n//             )}\n//           </SubmitButton>\n\n//           <ForgotPassword to=\"/forgot-password\">\n//             Forgot your password?\n//           </ForgotPassword>\n//         </Form>\n\n//         <Divider>\n//           <span>or</span>\n//         </Divider>\n\n//         <SignupLink>\n//           Don't have an account? <Link to=\"/signup\">Create one here</Link>\n//         </SignupLink>\n//       </LoginCard>\n//     </LoginContainer>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/persistent/home/guddy/code/project/client/src/pages/Login.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link, useNavigate, useLocation } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import styled from \"styled-components\";\n// import { Eye, EyeOff, Mail, Lock, LogIn, AlertCircle } from \"lucide-react\";\n// import axios from \"axios\";\n// import { useAuth } from \"../contexts/AuthContext\";\n// import LoadingSpinner from \"../components/common/LoadingSpinner\";\n\n// const LoginContainer = styled.div`\n//   min-height: 100vh;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   background: linear-gradient(\n//     135deg,\n//     ${({ theme }) => theme.colors.primary}10 0%,\n//     ${({ theme }) => theme.colors.secondary}10 100%\n//   );\n//   padding: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const LoginCard = styled.div`\n//   background: ${({ theme }) => theme.colors.surface};\n//   border-radius: ${({ theme }) => theme.borderRadius.xl};\n//   box-shadow: ${({ theme }) => theme.boxShadow.xl};\n//   padding: ${({ theme }) => theme.spacing[8]};\n//   width: 100%;\n//   max-width: 400px;\n//   border: 1px solid ${({ theme }) => theme.colors.border};\n// `;\n\n// const LogoSection = styled.div`\n//   text-align: center;\n//   margin-bottom: ${({ theme }) => theme.spacing[8]};\n// `;\n\n// const Logo = styled.h1`\n//   font-size: ${({ theme }) => theme.typography.fontSize[\"2xl\"]};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.bold};\n//   color: ${({ theme }) => theme.colors.primary};\n//   margin-bottom: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Subtitle = styled.p`\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[4]};\n// `;\n\n// const FormGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: ${({ theme }) => theme.spacing[2]};\n// `;\n\n// const Label = styled.label`\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   color: ${({ theme }) => theme.colors.textPrimary};\n// `;\n\n// const InputWrapper = styled.div`\n//   position: relative;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   padding-left: ${({ theme }) => theme.spacing[10]};\n//   padding-right: ${({ hasButton, theme }) =>\n//     hasButton ? theme.spacing[10] : theme.spacing[4]};\n//   border: 1px solid\n//     ${({ theme, error }) => (error ? theme.colors.error : theme.colors.border)};\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   background: ${({ theme }) => theme.colors.background};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   transition: all ${({ theme }) => theme.transitions.fast};\n\n//   &:focus {\n//     outline: none;\n//     border-color: ${({ theme, error }) =>\n//       error ? theme.colors.error : theme.colors.primary};\n//     box-shadow: 0 0 0 3px\n//       ${({ theme, error }) =>\n//         error ? theme.colors.error : theme.colors.primary}20;\n//   }\n\n//   &::placeholder {\n//     color: ${({ theme }) => theme.colors.textTertiary};\n//   }\n// `;\n\n// const InputIcon = styled.div`\n//   position: absolute;\n//   left: ${({ theme }) => theme.spacing[3]};\n//   color: ${({ theme, error }) =>\n//     error ? theme.colors.error : theme.colors.textTertiary};\n//   display: flex;\n//   align-items: center;\n//   z-index: 1;\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const InputButton = styled.button`\n//   position: absolute;\n//   right: ${({ theme }) => theme.spacing[3]};\n//   background: none;\n//   border: none;\n//   color: ${({ theme }) => theme.colors.textTertiary};\n//   cursor: pointer;\n//   display: flex;\n//   align-items: center;\n//   transition: color ${({ theme }) => theme.transitions.fast};\n//   z-index: 1;\n\n//   &:hover {\n//     color: ${({ theme }) => theme.colors.textPrimary};\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ErrorMessage = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: ${({ theme }) => theme.spacing[1]};\n//   color: ${({ theme }) => theme.colors.error};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   margin-top: ${({ theme }) => theme.spacing[1]};\n\n//   svg {\n//     width: 14px;\n//     height: 14px;\n//   }\n// `;\n\n// const SubmitButton = styled.button`\n//   width: 100%;\n//   padding: ${({ theme }) => theme.spacing[3]} ${({ theme }) => theme.spacing[4]};\n//   background: ${({ theme }) => theme.colors.primary};\n//   color: ${({ theme }) => theme.colors.white};\n//   border: none;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   font-size: ${({ theme }) => theme.typography.fontSize.base};\n//   font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//   cursor: pointer;\n//   transition: all ${({ theme }) => theme.transitions.fast};\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: ${({ theme }) => theme.spacing[2]};\n//   min-height: 48px;\n\n//   &:hover:not(:disabled) {\n//     background: ${({ theme }) => theme.colors.primaryHover};\n//     transform: translateY(-1px);\n//   }\n\n//   &:active:not(:disabled) {\n//     transform: translateY(0);\n//   }\n\n//   &:disabled {\n//     background: ${({ theme }) => theme.colors.gray400};\n//     cursor: not-allowed;\n//     transform: none;\n//   }\n\n//   svg {\n//     width: 18px;\n//     height: 18px;\n//   }\n// `;\n\n// const ForgotPassword = styled(Link)`\n//   text-align: center;\n//   color: ${({ theme }) => theme.colors.primary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   text-decoration: none;\n//   margin-top: ${({ theme }) => theme.spacing[2]};\n\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const Divider = styled.div`\n//   text-align: center;\n//   margin: ${({ theme }) => theme.spacing[6]} 0;\n//   color: ${({ theme }) => theme.colors.textTertiary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//   position: relative;\n\n//   &::before {\n//     content: \"\";\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n//     right: 0;\n//     height: 1px;\n//     background: ${({ theme }) => theme.colors.border};\n//     z-index: 0;\n//   }\n\n//   span {\n//     background: ${({ theme }) => theme.colors.surface};\n//     padding: 0 ${({ theme }) => theme.spacing[4]};\n//     position: relative;\n//     z-index: 1;\n//   }\n// `;\n\n// const SignupLink = styled.div`\n//   text-align: center;\n//   color: ${({ theme }) => theme.colors.textSecondary};\n//   font-size: ${({ theme }) => theme.typography.fontSize.sm};\n\n//   a {\n//     color: ${({ theme }) => theme.colors.primary};\n//     text-decoration: none;\n//     font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n\n//     &:hover {\n//       text-decoration: underline;\n//     }\n//   }\n// `;\n\n// const DemoCredentials = styled.div`\n//   background: ${({ theme }) => theme.colors.info}10;\n//   border: 1px solid ${({ theme }) => theme.colors.info}30;\n//   border-radius: ${({ theme }) => theme.borderRadius.md};\n//   padding: ${({ theme }) => theme.spacing[4]};\n//   margin-bottom: ${({ theme }) => theme.spacing[4]};\n\n//   h4 {\n//     color: ${({ theme }) => theme.colors.info};\n//     font-size: ${({ theme }) => theme.typography.fontSize.sm};\n//     font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\n//     margin-bottom: ${({ theme }) => theme.spacing[2]};\n//   }\n\n//   p {\n//     color: ${({ theme }) => theme.colors.textSecondary};\n//     font-size: ${({ theme }) => theme.typography.fontSize.xs};\n//     margin: ${({ theme }) => theme.spacing[1]} 0;\n//   }\n// `;\n\n// const Login = () => {\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [apiError, setApiError] = useState(null);\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const { isAuthenticated, login, clearErrors } = useAuth();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors, isValid },\n//     setValue,\n//   } = useForm({\n//     mode: \"onChange\",\n//     defaultValues: {\n//       email: \"\",\n//       password: \"\",\n//     },\n//   });\n\n//   useEffect(() => {\n//     if (isAuthenticated) {\n//       const from = location.state?.from?.pathname || \"/dashboard\";\n//       navigate(from, { replace: true });\n//     }\n//   }, [isAuthenticated, navigate, location]);\n\n//   // Clear any old errors from the context when the component loads\n//   useEffect(() => {\n//     clearErrors();\n//   }, [clearErrors]);\n\n//   const onSubmit = async (data) => {\n//     setIsLoading(true);\n//     setApiError(null);\n//     try {\n//       // Call the backend API endpoint\n//       const res = await axios.post(\"/api/auth/login\", data);\n\n//       // On success, update the auth context with the new token\n//       login(res.data.token);\n\n//       const from = location.state?.from?.pathname || \"/dashboard\";\n//       navigate(from, { replace: true });\n//     } catch (err) {\n//       console.error(\"Login error:\", err);\n//       if (err.response && err.response.data && err.response.data.msg) {\n//         setApiError(err.response.data.msg); // E.g., \"Invalid credentials\"\n//       } else {\n//         setApiError(\"An unexpected error occurred. Please try again.\");\n//       }\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   return (\n//     <LoginContainer>\n//       <LoginCard>\n//         <LogoSection>\n//           <Logo>Email Classifier</Logo>\n//           <Subtitle>AI-powered email management</Subtitle>\n//         </LogoSection>\n\n//         <Form onSubmit={handleSubmit(onSubmit)} noValidate>\n//           <FormGroup>\n//             <Label htmlFor=\"email\">Email Address</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.email}>\n//                 <Mail />\n//               </InputIcon>\n//               <Input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 error={errors.email}\n//                 {...register(\"email\", {\n//                   required: \"Email is required\",\n//                   pattern: {\n//                     value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n//                     message: \"Please enter a valid email address\",\n//                   },\n//                 })}\n//               />\n//             </InputWrapper>\n//             {errors.email && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.email.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           <FormGroup>\n//             <Label htmlFor=\"password\">Password</Label>\n//             <InputWrapper>\n//               <InputIcon error={errors.password}>\n//                 <Lock />\n//               </InputIcon>\n//               <Input\n//                 id=\"password\"\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 placeholder=\"Enter your password\"\n//                 error={errors.password}\n//                 hasButton\n//                 {...register(\"password\", {\n//                   required: \"Password is required\",\n//                 })}\n//               />\n//               <InputButton\n//                 type=\"button\"\n//                 onClick={togglePasswordVisibility}\n//                 aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n//               >\n//                 {showPassword ? <EyeOff /> : <Eye />}\n//               </InputButton>\n//             </InputWrapper>\n//             {errors.password && (\n//               <ErrorMessage>\n//                 <AlertCircle />\n//                 {errors.password.message}\n//               </ErrorMessage>\n//             )}\n//           </FormGroup>\n\n//           {apiError && (\n//             <ErrorMessage>\n//               <AlertCircle />\n//               {apiError}\n//             </ErrorMessage>\n//           )}\n\n//           <SubmitButton type=\"submit\" disabled={!isValid || isLoading}>\n//             {isLoading ? (\n//               <LoadingSpinner size=\"sm\" color=\"white\" />\n//             ) : (\n//               <>\n//                 <LogIn />\n//                 Sign In\n//               </>\n//             )}\n//           </SubmitButton>\n\n//           <ForgotPassword to=\"/forgot-password\">\n//             Forgot your password?\n//           </ForgotPassword>\n//         </Form>\n\n//         <Divider>\n//           <span>or</span>\n//         </Divider>\n\n//         <SignupLink>\n//           Don't have an account? <Link to=\"/signup\">Create one here</Link>\n//         </SignupLink>\n//       </LoginCard>\n//     </LoginContainer>\n//   );\n// };\n\n// export default Login;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}